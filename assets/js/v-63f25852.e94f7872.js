"use strict";(self.webpackChunk_radial_color_picker_vue_color_picker=self.webpackChunk_radial_color_picker_vue_color_picker||[]).push([[607],{244:(n,a,s)=>{s.r(a),s.d(a,{data:()=>t});const t={key:"v-63f25852",path:"/examples.html",title:"Examples",lang:"en-US",frontmatter:{sidebar:"auto"},excerpt:"",headers:[{level:2,title:"Basic",slug:"basic",children:[]},{level:2,title:"Working with non-primary colors",slug:"working-with-non-primary-colors",children:[]},{level:2,title:"Uncontrolled component",slug:"uncontrolled-component",children:[]},{level:2,title:"Persistent mode",slug:"persistent-mode",children:[]},{level:2,title:"Accessibility",slug:"accessibility",children:[]}],filePathRelative:"examples.md",git:{updatedTime:1627898601e3,contributors:[{name:"Rosen Kanev",email:"rkunev@gmail.com",commits:4}]}}},343:(n,a,s)=>{s.r(a),s.d(a,{default:()=>x});var t=s(252);const p=(0,t.Wm)("h1",{id:"examples",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#examples","aria-hidden":"true"},"#"),(0,t.Uk)(" Examples")],-1),o={class:"custom-container tip"},e=(0,t.Wm)("p",{class:"custom-container-title"},"TIP",-1),c=(0,t.Uk)("Looking for a quicker way to try it out yourself? Checkout the "),l={href:"https://github.com/radial-color-picker/vue-color-picker/tree/master/examples",target:"_blank",rel:"noopener noreferrer"},u=(0,t.Uk)("examples"),i=(0,t.Uk)(" folder in GitHub. There's an example with Vite and a vanilla example without a build step."),k=(0,t.Uk)("There's a "),r={href:"https://codepen.io/rkunev/pen/zjEmwV/",target:"_blank",rel:"noopener noreferrer"},d=(0,t.Uk)("codepen"),g=(0,t.Uk)(" as well."),m=(0,t.Wm)("h2",{id:"basic",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#basic","aria-hidden":"true"},"#"),(0,t.Uk)(" Basic")],-1),h=(0,t.Wm)("p",null,"In it's most basic form the color picker can be used as below.",-1),v=(0,t.uE)('<div class="language-vue ext-vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color-picker</span> <span class="token attr-name">:hue</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hue<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@input</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>updateColor<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n        name<span class="token operator">:</span> <span class="token string">&#39;example-basic&#39;</span><span class="token punctuation">,</span>\n        <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">const</span> hue <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                hue<span class="token punctuation">,</span>\n                <span class="token function">updateColor</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    hue<span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><h2 id="working-with-non-primary-colors" tabindex="-1"><a class="header-anchor" href="#working-with-non-primary-colors" aria-hidden="true">#</a> Working with non-primary colors</h2><p>The basic example assumes only the most saturated colors and uses the default values for <code>saturation</code>, <code>luminosity</code> and <code>alpha</code>, but we&#39;re not limitted to them. Here&#39;s an example with a less aggressive saturation and luminosity:</p>',3),y=(0,t.uE)('<div class="language-vue ext-vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color-picker</span> <span class="token attr-name">v-bind</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>color<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@input</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>updateColor<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token keyword">import</span> <span class="token punctuation">{</span> reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n        name<span class="token operator">:</span> <span class="token string">&#39;example-non-primary&#39;</span><span class="token punctuation">,</span>\n        <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">const</span> color <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                hue<span class="token operator">:</span> <span class="token number">338</span><span class="token punctuation">,</span>\n                saturation<span class="token operator">:</span> <span class="token number">91</span><span class="token punctuation">,</span>\n                luminosity<span class="token operator">:</span> <span class="token number">57</span><span class="token punctuation">,</span>\n                alpha<span class="token operator">:</span> <span class="token number">0.95</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                color<span class="token punctuation">,</span>\n                <span class="token function">updateColor</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    color<span class="token punctuation">.</span>hue <span class="token operator">=</span> value<span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><h2 id="uncontrolled-component" tabindex="-1"><a class="header-anchor" href="#uncontrolled-component" aria-hidden="true">#</a> Uncontrolled component</h2><p>If you only need to react to <code>@change</code> or <code>@select</code> events you can skip <code>hue</code> + <code>@input</code>. Here&#39;s an example</p>',3),w=(0,t.uE)('<div class="language-vue ext-vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color-picker</span> <span class="token attr-name">@select</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onColorSelect<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n        name<span class="token operator">:</span> <span class="token string">&#39;example-uncontrolled&#39;</span><span class="token punctuation">,</span>\n        <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">const</span> color <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;hsl(0, 100%, 50%)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                <span class="token function">onColorSelect</span><span class="token punctuation">(</span><span class="token parameter">hue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    color<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">hsl(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>hue<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, 100%, 50%)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><h2 id="persistent-mode" tabindex="-1"><a class="header-anchor" href="#persistent-mode" aria-hidden="true">#</a> Persistent mode</h2><p>It&#39;s not always convenient to show the picker in a modal window that is shown/hidden on demand. That&#39;s why the color picker has an inline mode where interacting with the color well in the middle will not collapse the palette and the picker will stay opened.</p>',3),f=(0,t.uE)('<div class="language-vue ext-vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color-picker</span> <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>persistent<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:hue</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hue<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@input</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>updateColor<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n        name<span class="token operator">:</span> <span class="token string">&#39;example-non-collapsing-mode&#39;</span><span class="token punctuation">,</span>\n        <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">const</span> hue <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                hue<span class="token punctuation">,</span>\n                <span class="token function">updateColor</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    hue<span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><h2 id="accessibility" tabindex="-1"><a class="header-anchor" href="#accessibility" aria-hidden="true">#</a> Accessibility</h2><p>The color picker already has built-in screen reader support, but if you wish to customize it further you&#39;re free to do so! In fact, if you&#39;re app has internationalization (e.g. it&#39;s translated in Spanish) you <em>should</em> also translate the <code>aria-label</code>, <code>aria-roledescription</code>, <code>aria-valuetext</code>, and <code>aria-label-color-well</code>. The following example highlights how to tweak the <code>aria-valuetext</code> since it&#39;s a dynamic value.</p>',3),b=(0,t.uE)('<div class="language-vue ext-vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color-picker</span> <span class="token attr-name">v-bind</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>color<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@input</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onInput<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:aria-valuetext</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>valuetext<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n    <span class="token keyword">import</span> <span class="token punctuation">{</span> reactive<span class="token punctuation">,</span> computed <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> colors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;yellow&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;green&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;cyan&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;magenta&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n        name<span class="token operator">:</span> <span class="token string">&#39;example-accessibility&#39;</span><span class="token punctuation">,</span>\n        <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">const</span> color <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                hue<span class="token operator">:</span> <span class="token number">141</span><span class="token punctuation">,</span>\n                saturation<span class="token operator">:</span> <span class="token number">60</span><span class="token punctuation">,</span>\n                luminosity<span class="token operator">:</span> <span class="token number">75</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token keyword">const</span> valuetext <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                <span class="token comment">// Note: you don&#39;t have to cut corners.</span>\n                <span class="token comment">// Use regular switch/if-else if it makes more sense</span>\n                <span class="token keyword">const</span> index <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>color<span class="token punctuation">.</span>hue <span class="token operator">/</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token keyword">const</span> value <span class="token operator">=</span> colors<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n                <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">light </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                color<span class="token punctuation">,</span>\n                valuetext<span class="token punctuation">,</span>\n                <span class="token function">onInput</span><span class="token punctuation">(</span><span class="token parameter">hue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    color<span class="token punctuation">.</span>hue <span class="token operator">=</span> hue<span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div>',1);var x={render:function(n,a){const s=(0,t.up)("OutboundLink"),x=(0,t.up)("ExampleBasic"),q=(0,t.up)("ExampleNonPrimary"),W=(0,t.up)("ExampleUncontrolled"),_=(0,t.up)("ExampleNonCollapsingMode"),E=(0,t.up)("ExampleAccessibility");return(0,t.wg)(),(0,t.j4)(t.HY,null,[p,(0,t.Wm)("div",o,[e,(0,t.Wm)("p",null,[c,(0,t.Wm)("a",l,[u,(0,t.Wm)(s)]),i]),(0,t.Wm)("p",null,[k,(0,t.Wm)("a",r,[d,(0,t.Wm)(s)]),g])]),m,h,(0,t.Wm)(x),v,(0,t.Wm)(q),y,(0,t.Wm)(W),w,(0,t.Wm)(_),f,(0,t.Wm)(E),b],64)}}}}]);