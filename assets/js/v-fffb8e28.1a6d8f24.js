"use strict";(self.webpackChunk_radial_color_picker_vue_color_picker=self.webpackChunk_radial_color_picker_vue_color_picker||[]).push([[807],{570:(e,r,i)=>{i.r(r),i.d(r,{data:()=>l});const l={key:"v-fffb8e28",path:"/guide/",title:"Introduction",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Features",slug:"features",children:[]},{level:2,title:"Ecosystem",slug:"ecosystem",children:[]}],filePathRelative:"guide/README.md",git:{updatedTime:1627898601e3,contributors:[{name:"Rosen Kanev",email:"rkunev@gmail.com",commits:5}]}}},132:(e,r,i)=>{i.r(r),i.d(r,{default:()=>h});var l=i(252);const o=(0,l.uE)('<h1 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction" aria-hidden="true">#</a> Introduction</h1><p>Great UX starts with two basic principles - ease of use and simplicity. Selecting a color should be as easy as moving a slider, clicking a checkbox or pressing a key just like other basic form elements behave.</p><p>This is a flexible and minimalistic color picker. Developed with mobile devices and keyboard usage in mind.</p><h2 id="features" tabindex="-1"><a class="header-anchor" href="#features" aria-hidden="true">#</a> Features</h2><ul><li>Small size - 3.3 KB gzipped (JS and CSS combined)</li><li>Supports touch devices</li><li>Optimized animations</li><li>Ease of use <ul><li>Screen reader support.</li><li><kbd>Tab</kbd> to focus the picker.</li><li><kbd>↑</kbd> or <kbd>→</kbd> arrow key to increase hue. <kbd>PgUp</kbd> to go quicker.</li><li><kbd>↓</kbd> or <kbd>←</kbd> arrow key to decrease hue. <kbd>PgDown</kbd> to go quicker.</li><li><kbd>Enter</kbd> to select a color and close the picker or to open it.</li><li>Mouse <kbd>ScrollUp</kbd> to increase and <kbd>ScrollDown</kbd> to decrease hue (Opt-in).</li></ul></li><li>Experimental TypeScript support</li></ul><h2 id="ecosystem" tabindex="-1"><a class="header-anchor" href="#ecosystem" aria-hidden="true">#</a> Ecosystem</h2><p>The right color picker, but not the framework you&#39;re looking for?</p>',7),a={href:"https://github.com/radial-color-picker/vue-color-picker",target:"_blank",rel:"noopener noreferrer"},t=(0,l.Uk)("Vue"),n=(0,l.Uk)(" - you're here!"),c={href:"https://github.com/radial-color-picker/react-color-picker",target:"_blank",rel:"noopener noreferrer"},s=(0,l.Uk)("React"),d={href:"https://github.com/talamaska/angular-radial-color-picker",target:"_blank",rel:"noopener noreferrer"},u=(0,l.Uk)("AngularJs"),k={href:"https://github.com/radial-color-picker/angular-color-picker",target:"_blank",rel:"noopener noreferrer"},p=(0,l.Uk)("Angular");var h={render:function(e,r){const i=(0,l.up)("OutboundLink");return(0,l.wg)(),(0,l.j4)(l.HY,null,[o,(0,l.Wm)("ul",null,[(0,l.Wm)("li",null,[(0,l.Wm)("a",a,[t,(0,l.Wm)(i)]),n]),(0,l.Wm)("li",null,[(0,l.Wm)("a",c,[s,(0,l.Wm)(i)])]),(0,l.Wm)("li",null,[(0,l.Wm)("a",d,[u,(0,l.Wm)(i)])]),(0,l.Wm)("li",null,[(0,l.Wm)("a",k,[p,(0,l.Wm)(i)])])])],64)}}}}]);